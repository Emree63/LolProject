// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFlib;

#nullable disable

namespace MyFlib.Migrations
{
    [DbContext(typeof(LolDbContext))]
    [Migration("20230325231552_myMigration")]
    partial class myMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.Property<Guid>("ChampionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RunePagesName")
                        .HasColumnType("TEXT");

                    b.HasKey("ChampionsId", "RunePagesName");

                    b.HasIndex("RunePagesName");

                    b.ToTable("ChampionEntityRunePageEntity");
                });

            modelBuilder.Entity("MyFlib.ChampionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Champions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Bio = "",
                            Class = 1,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Name = "Akali"
                        },
                        new
                        {
                            Id = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Bio = "",
                            Class = 2,
                            Icon = "",
                            ImageId = new Guid("9f9086f5-5cc5-47b5-af9b-a935f4e9b89c"),
                            Name = "Aatrox"
                        },
                        new
                        {
                            Id = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Bio = "",
                            Class = 3,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Name = "Ahri"
                        },
                        new
                        {
                            Id = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Bio = "",
                            Class = 4,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Name = "Akshan"
                        },
                        new
                        {
                            Id = new Guid("7f7746fa-b1cb-49da-9409-4b3e6910500e"),
                            Bio = "",
                            Class = 5,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Name = "Bard"
                        },
                        new
                        {
                            Id = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Bio = "",
                            Class = 6,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Name = "Alistar"
                        });
                });

            modelBuilder.Entity("MyFlib.DictionaryCategoryRune", b =>
                {
                    b.Property<string>("RunePageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuneName")
                        .HasColumnType("TEXT");

                    b.Property<int>("category")
                        .HasColumnType("INTEGER");

                    b.HasKey("RunePageName", "RuneName");

                    b.HasIndex("RuneName");

                    b.ToTable("CategoryRunes");

                    b.HasData(
                        new
                        {
                            RunePageName = "Page 1",
                            RuneName = "Hextech Flashtraption ",
                            category = 0
                        },
                        new
                        {
                            RunePageName = "Page 1",
                            RuneName = "Manaflow Band ",
                            category = 1
                        },
                        new
                        {
                            RunePageName = "Page 2",
                            RuneName = "Manaflow Band ",
                            category = 4
                        },
                        new
                        {
                            RunePageName = "Page 2",
                            RuneName = "Hextech Flashtraption ",
                            category = 5
                        });
                });

            modelBuilder.Entity("MyFlib.Entities.CharacteristicEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChampionForeignKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name", "ChampionForeignKey");

                    b.HasIndex("ChampionForeignKey");

                    b.ToTable("Characteristic");

                    b.HasData(
                        new
                        {
                            Name = "Attack Damage",
                            ChampionForeignKey = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Value = 58
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Value = 92
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Value = 6
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Value = 526
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("ae5fe535-f041-445e-b570-28b75bc78cb9"),
                            Value = 418
                        },
                        new
                        {
                            Name = "Attack Damage",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Value = 68
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Value = 0
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Value = 1
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Value = 570
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Value = 350
                        },
                        new
                        {
                            Name = "Attack Damage",
                            ChampionForeignKey = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Value = 70
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Value = 0
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Value = 1
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Value = 580
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("a4f84d92-c20f-4f2d-b3f9-ca00ef556e72"),
                            Value = 0
                        },
                        new
                        {
                            Name = "Attack Damage",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Value = 56
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Value = 0
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Value = 1
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Value = 575
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Value = 200
                        },
                        new
                        {
                            Name = "Attack Damage",
                            ChampionForeignKey = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Value = 63
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Value = 0
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Value = 2
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Value = 573
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("36ad2a82-d17b-47de-8a95-6e154a7df557"),
                            Value = 278
                        },
                        new
                        {
                            Name = "Ability Power",
                            ChampionForeignKey = new Guid("7f7746fa-b1cb-49da-9409-4b3e6910500e"),
                            Value = 30
                        },
                        new
                        {
                            Name = "Attack Speed",
                            ChampionForeignKey = new Guid("7f7746fa-b1cb-49da-9409-4b3e6910500e"),
                            Value = 1
                        },
                        new
                        {
                            Name = "Health",
                            ChampionForeignKey = new Guid("7f7746fa-b1cb-49da-9409-4b3e6910500e"),
                            Value = 535
                        },
                        new
                        {
                            Name = "Mana",
                            ChampionForeignKey = new Guid("7f7746fa-b1cb-49da-9409-4b3e6910500e"),
                            Value = 350
                        });
                });

            modelBuilder.Entity("MyFlib.Entities.RunePageEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("RunePages");

                    b.HasData(
                        new
                        {
                            Name = "Page 1"
                        },
                        new
                        {
                            Name = "Page 2"
                        });
                });

            modelBuilder.Entity("MyFlib.LargeImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Base64")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LargeImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Base64 = "empty"
                        },
                        new
                        {
                            Id = new Guid("9f9086f5-5cc5-47b5-af9b-a935f4e9b89c"),
                            Base64 = " "
                        });
                });

            modelBuilder.Entity("MyFlib.RuneEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Family")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("ImageId");

                    b.ToTable("Runes");

                    b.HasData(
                        new
                        {
                            Name = "Hextech Flashtraption ",
                            Description = "While Flash is on cooldown, it is replaced by Hexflash.",
                            Family = 0,
                            Icon = "",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65")
                        },
                        new
                        {
                            Name = "Manaflow Band ",
                            Description = "Hitting enemy champions with a spell grants 25 maximum mana, up to 250 mana.",
                            Family = 2,
                            Icon = "",
                            ImageId = new Guid("9f9086f5-5cc5-47b5-af9b-a935f4e9b89c")
                        });
                });

            modelBuilder.Entity("MyFlib.SkillEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChampionForeignKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.HasIndex("ChampionForeignKey");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Name = "Boule de feu",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Description = "Fire!",
                            Type = 1
                        },
                        new
                        {
                            Name = "White Star",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Description = "Random damage",
                            Type = 3
                        });
                });

            modelBuilder.Entity("MyFlib.SkinEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChampionForeignKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Name");

                    b.HasIndex("ChampionForeignKey");

                    b.HasIndex("ImageId");

                    b.ToTable("Skins");

                    b.HasData(
                        new
                        {
                            Name = "Akali Infernale",
                            ChampionForeignKey = new Guid("4422c524-b2cb-43ef-8263-990c3cea7cae"),
                            Description = "Djinn qu'on invoque en dessous du monde, l'Infernale connue sous le nom d'Akali réduira en cendres les ennemis de son maître… mais le prix de son service est toujours exorbitant.",
                            Icon = "empty",
                            ImageId = new Guid("8d121cdc-6787-4738-8edd-9e026ac16b65"),
                            Price = 520f
                        },
                        new
                        {
                            Name = "Akshan Cyberpop",
                            ChampionForeignKey = new Guid("3708dcfd-02a1-491e-b4f7-e75bf274cf23"),
                            Description = "Les bas-fonds d'Audio City ont un nouveau héros : le Rebelle fluo. Cette position, Akshan la doit à son courage, sa sagesse et sa capacité à s'infiltrer dans des bâtiments d'affaires hautement sécurisés, et ce, sans être repéré. Son charme ravageur l'a aussi beaucoup aidé.",
                            Icon = "empty",
                            ImageId = new Guid("9f9086f5-5cc5-47b5-af9b-a935f4e9b89c"),
                            Price = 1350f
                        });
                });

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.HasOne("MyFlib.ChampionEntity", null)
                        .WithMany()
                        .HasForeignKey("ChampionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFlib.Entities.RunePageEntity", null)
                        .WithMany()
                        .HasForeignKey("RunePagesName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyFlib.ChampionEntity", b =>
                {
                    b.HasOne("MyFlib.LargeImageEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MyFlib.DictionaryCategoryRune", b =>
                {
                    b.HasOne("MyFlib.RuneEntity", "rune")
                        .WithMany("DictionaryCategoryRunes")
                        .HasForeignKey("RuneName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFlib.Entities.RunePageEntity", "runePage")
                        .WithMany("DictionaryCategoryRunes")
                        .HasForeignKey("RunePageName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rune");

                    b.Navigation("runePage");
                });

            modelBuilder.Entity("MyFlib.Entities.CharacteristicEntity", b =>
                {
                    b.HasOne("MyFlib.ChampionEntity", "Champion")
                        .WithMany("Characteristics")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("MyFlib.RuneEntity", b =>
                {
                    b.HasOne("MyFlib.LargeImageEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MyFlib.SkillEntity", b =>
                {
                    b.HasOne("MyFlib.ChampionEntity", "Champion")
                        .WithMany("Skills")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("MyFlib.SkinEntity", b =>
                {
                    b.HasOne("MyFlib.ChampionEntity", "Champion")
                        .WithMany("Skins")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFlib.LargeImageEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MyFlib.ChampionEntity", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Skills");

                    b.Navigation("Skins");
                });

            modelBuilder.Entity("MyFlib.Entities.RunePageEntity", b =>
                {
                    b.Navigation("DictionaryCategoryRunes");
                });

            modelBuilder.Entity("MyFlib.RuneEntity", b =>
                {
                    b.Navigation("DictionaryCategoryRunes");
                });
#pragma warning restore 612, 618
        }
    }
}
